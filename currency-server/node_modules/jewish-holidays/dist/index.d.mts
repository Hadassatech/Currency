import { JewishMonthType, BasicJewishDate } from 'jewish-date';

/**
 * Represents a Jewish holiday.
 * @public
 */
interface Holiday {
    /**
     * The day of the month on which the holiday occurs.
     *
     * @remarks
     * This value should be a number between 1 and 30, depending on the month.
     *
     * @example
     * // Example: 15th of the month
     * const holiday: Holiday = \{ day: 15, monthName: "Nisan", name: "Passover" \};
     */
    day: number;
    /**
     * The name of the month in which the holiday falls.
     *
     * @remarks
     * This should be of type `JewishMonthType`, representing the specific month in the Jewish calendar.
     *
     * @example
     * // Example: Nisan
     * const holiday: Holiday = \{ day: 15, monthName: "Nisan", name: "Passover" \};
     */
    monthName: JewishMonthType;
    /**
     * The official name of the holiday.
     *
     * @remarks
     * This should be a string representing the name of the holiday, such as "Passover" or "Rosh Hashanah".
     *
     * @example
     * // Example: "Passover"
     * const holiday: Holiday = \{ day: 15, monthName: "Nisan", name: "Passover" \};
     */
    name: string;
}

/**
 * Return if the date exists in holyday list
 * @public
 */
declare const isHoliday: (jewishDate: BasicJewishDate, holidayList: Holiday[]) => boolean;

/**
 * Checks if a given date is Shabbat (the Jewish Sabbath).
 *
 * @param date - The date to check, which can be a JavaScript `Date` object
 *               or a `BasicJewishDate` object.
 *
 * @returns A boolean indicating whether the provided date falls on Shabbat.
 *
 * @remarks
 * Shabbat begins at sundown on Friday and ends at nightfall on Saturday.
 * In the Gregorian calendar, Shabbat corresponds to Saturday, which is
 * represented by `getDay() === 6`.
 *
 * @example
 * // Example: Check if a specific date is Shabbat
 * const date = new Date('2023-10-21'); // Saturday
 * const result = isShabbat(date); // true
 *
 * @public
 */
declare const isShabbat: (date: Date | BasicJewishDate) => boolean;

/**
 * Determines if a given date is a Yom Tov (Jewish holiday).
 *
 * This function accepts either a Gregorian date or a BasicJewishDate object
 * and checks if it corresponds to a Yom Tov in either Israel or Chutz Laaretz (the diaspora).
 *
 * @param  date - The date to check, which can be either:
 *   - A Gregorian date object, or
 *   - An object representing a Jewish date with properties `day`, `monthName`, and `year`.
 * @param isChutzLaaretz - A boolean indicating whether to check against Yom Tov dates
 *   observed in Chutz Laaretz. Defaults to `false`, meaning it checks only for Israeli holidays.
 *
 * @returns  Returns `true` if the given date is a Yom Tov,
 *   and `false` otherwise.
 *
 * @example
 * const isRoshHashanah = isYomTov(new Date(2024, 9, 3)); // true
 * const isSukkotInChutzLaaretz = isYomTov(\{ day: 16, monthName: "Tishri", year: 5785 \}, true); // true
 *
 * @public
 */
declare const isYomTov: (date: Date | BasicJewishDate, isChutzLaaretz?: boolean) => boolean;

export { type Holiday, isHoliday, isShabbat, isYomTov };
